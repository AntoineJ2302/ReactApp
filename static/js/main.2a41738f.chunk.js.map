{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAoBeA,EAjBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAEtC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,+BACI,8CACCG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,aAGxB,6CAAgBR,KAChB,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCkE1CC,G,MA5EH,WAEZ,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACNC,MAED,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAbf,WAae,oBAZd,qCAWG,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MANA,2CAAH,qDAqBhB,OAEE,sBAAKvB,UAAU,MAAf,UAEE,uBAAM0B,SAZQ,SAAAC,GAElBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAQqBb,UAAU,cAArC,UAEE,uBAAOA,UAAU,aACjB6B,KAAK,OACLC,MAAOlB,EACPmB,SArBe,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAuBf,wBACA9B,UAAU,gBACV6B,KAAK,SAFL,uBAUF,qBAAK7B,UAAU,UAAf,SAECU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO+B,iBCtDVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.2a41738f.chunk.js","sourcesContent":["import React from \"react\";\nimport style from './recipe.module.css';\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n\n    return ( \n        <div className={style.recipe}>\n            <h1>{title}</h1>\n            <ol> \n                <h2>Ingredients:</h2>\n                {ingredients.map(ingredient => (\n                    <li>{ingredient.text}</li>\n                ))}\n            </ol>\n            <h1>Calories : {calories}</h1>\n            <img className={style.image} src={image} alt=\"\"/>\n        </div>\n    );\n};\n\nexport default Recipe;","import React, {useEffect, useState} from 'react';\nimport Recipe from './recipe.js';\nimport './App.css';\n\n\nconst App = () => {\n\nconst APP_ID = 'faed60e7';\nconst APP_KEY = 'faf7cc17cfbc2e91104199f364fd1302';\n \nconst [recipes, setRecipes] = useState([]);\nconst [search, setSearch] = useState('');\nconst [query, setQuery] = useState('chicken');\n\nuseEffect(() => {\n    getRecipes();\n    \n}, [query]);\n\nconst getRecipes = async () => {\n  const response = await fetch( \n    `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n  const data = await response.json();\n  setRecipes(data.hits);\n  console.log(data.hits);\n};\n\nconst updateSearch = e => {\n  setSearch(e.target.value);\n};\n\nconst getSearch = e => {\n\ne.preventDefault();\nsetQuery(search);\nsetSearch('');\n\n}\n\nreturn (\n\n  <div className=\"App\">\n\n    <form onSubmit={getSearch} className=\"search-form\">\n\n      <input className=\"search-bar\" \n      type=\"text\" \n      value={search} \n      onChange={updateSearch} \n      />\n\n      <button  \n      className=\"search-button\" \n      type=\"submit\"\n      >\n\n        Search\n\n      </button>\n\n    </form>  \n    <div className=\"recipes\">\n\n    {recipes.map(recipe =>(\n      <Recipe \n      key={recipe.recipe.label}\n      title={recipe.recipe.label} \n      calories={recipe.recipe.calories}\n      image={recipe.recipe.image}\n      ingredients={recipe.recipe.ingredients}\n      />\n    ))}\n    \n     </div>\n  </div>\n);\n\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};"],"sourceRoot":""}